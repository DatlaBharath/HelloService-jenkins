version: 2
plan:
    project-key: AUT
    name: Maven Build and Docker Deploy Plan
    key: MVN

stages:
    - Security Scan:
        jobs:
        - Vulnerability Scan
    - Build and Deploy:
        jobs:
        - Build and Package
Vulnerability Scan:
    tasks:
    - script:
        - |
            echo "Running vulnerability scan..."
            RESPONSE=$(curl --location "http://microservice-genai.uksouth.cloudapp.azure.com/api/vmsb/pipelines/initscan" \
            --header "Content-Type: application/json" \
            --data '{
                "encrypted_user_id": "gAAAAABnyCdKTdqwwv1tgbx8CqlTQnyYbqWBATox1Q58q-y8PmXbXc4_65tTO3jRijx92hpZI1juGV-80apcQa0Z72HgzkJsiA==",
                "scanner_id": 1,
                "target_branch": "main", 
                "repo_url": "https://github.com/DatlaBharath/HelloService",
                "pat": "string"
              }')
            
            echo "Curl response: $RESPONSE"
            
            ESCAPED_RESPONSE=$(echo "$RESPONSE" | sed 's/\"/\\\"/g')
            JSON_DATA="{\"response\": \"$ESCAPED_RESPONSE\"}"
            
            CONTENT_LENGTH=${#JSON_DATA}
            echo "Sending response to backend..."
            curl -X POST http://ec2-13-201-18-57.ap-south-1.compute.amazonaws.com/app/save-curl-response-bamboo \
            -H "Content-Type: application/json" \
            -H "Content-Length: $CONTENT_LENGTH" \
            -d "$JSON_DATA"
            
            TOTAL_VULNERABILITIES=0
            echo "Total vulnerabilities: $TOTAL_VULNERABILITIES"
            
            if echo "$TOTAL_VULNERABILITIES" | grep -q '^[0-9][0-9]*$'; then
                if [ "$TOTAL_VULNERABILITIES" -le 0 ]; then
                    echo "Success: No vulnerabilities found."
                else
                    echo "Failure: Found $TOTAL_VULNERABILITIES vulnerabilities."
                    echo "Setting build result to FAILED"
                    exit 1
                fi
            else
                if echo "$RESPONSE" | grep -q '"success": *true'; then
                    echo "Success status found in response. Proceeding with build."
                else
                    echo "Warning: Could not parse total_vulnerabilities and no success status found."
                    echo "Continuing with build as a precaution, but please check the response."
                fi
            fi
Build and Package:
    tasks:
    - script:
        - mvn clean install -DskipTests
        - docker build -t sakthisiddu1/helloservice:${bamboo.buildNumber} .
        - echo "Sakthisid@1" | docker login -u "sakthisiddu1" --password-stdin
        - docker push sakthisiddu1/helloservice:${bamboo.buildNumber}
        
    - script:
        - echo "Creating deployment.yaml"
        - |
            cat <<EOF > deployment.yaml
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: helloservice-deployment
            spec:
              replicas: 2
              selector:
                matchLabels:
                  app: helloservice
              template:
                metadata:
                  labels:
                    app: helloservice
                spec:
                  containers:
                  - name: helloservice
                    image: sakthisiddu1/helloservice:${bamboo.buildNumber}
                    ports:
                    - containerPort: 5000
            EOF
        
        - echo "Creating service.yaml"
        - |
            cat <<EOF > service.yaml
            apiVersion: v1
            kind: Service
            metadata:
              name: helloservice-service
            spec:
              type: NodePort
              selector:
                app: helloservice
              ports:
              - port: 5000
                targetPort: 5000
                nodePort: 30007
            EOF
        
    - script:
        - echo "Deploying to Kubernetes"
        - scp -o StrictHostKeyChecking=no -i /var/test.pem deployment.yaml service.yaml ubuntu@13.234.119.89:/home/ubuntu/
        - ssh -o StrictHostKeyChecking=no -i /var/test.pem ubuntu@13.234.119.89 "kubectl apply -f /home/ubuntu/deployment.yaml"
        - ssh -o StrictHostKeyChecking=no -i /var/test.pem ubuntu@13.234.119.89 "kubectl apply -f /home/ubuntu/service.yaml"